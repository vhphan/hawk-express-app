create materialized view daily_stats.kpi_nr_nrcelldu as
select
date_id,
"Region",
sum("dl_256qam_nom")  as  dl_256qam ,
sum("ul_qpsk_nom")  as  ul_qpsk ,
sum("ul_16qam_nom")  as  ul_16qam ,
sum("ul_64qam_nom")  as  ul_64qam ,
sum("ul_256qam_nom")  as  ul_256qam ,
sum("dl_mac_vol_to_scell_nom") ||| sum("dl_mac_vol_to_scell_den")  as  dl_mac_vol_to_scell ,
sum("dl_mac_vol_as_scell_nom")||| sum("dl_mac_vol_as_scell_den")  as  dl_mac_vol_as_scell ,
sum("dl_mac_vol_to_scell_ext_nom")||| sum("dl_mac_vol_to_scell_ext_den")  as  dl_mac_vol_to_scell_ext ,
sum("dl_mac_vol_as_scell_ext_nom")||| sum("dl_mac_vol_as_scell_ext_den")  as  dl_mac_vol_as_scell_ext ,
sum("cell_availability_nom")||| sum("cell_availability_den")  as  cell_availability ,
sum("e-rab_block_rate_nom")||| sum("e-rab_block_rate_den")  as  "e-rab_block_rate" ,
sum("resource_block_utilizing_rate_dl_nom")||| sum("resource_block_utilizing_rate_dl_den")  as  resource_block_utilizing_rate_dl ,
sum("resource_block_utilizing_rate_ul_nom")||| sum("resource_block_utilizing_rate_ul_den")  as  resource_block_utilizing_rate_ul ,
sum("ul_bler_nom")||| sum("ul_bler_den")  as  ul_bler ,
sum("dl_user_throughput_nom") ||| sum("dl_user_throughput_den")  as  dl_user_throughput ,
sum("ul_user_throughput_nom") ||| sum("ul_user_throughput_den")  as  ul_user_throughput ,
sum("dl_cell_throughput_nom") ||| sum("dl_cell_throughput_den")  as  dl_cell_throughput ,
sum("ul_cell_throughput_nom") ||| sum("ul_cell_throughput_den")  as  ul_cell_throughput ,
sum("dl_data_volume_gb_nom")||| sum("dl_data_volume_gb_den")  as  dl_data_volume_gb ,
sum("ul_data_volume_gb_nom")||| sum("ul_data_volume_gb_den")  as  ul_data_volume_gb ,
sum("total_traffic_gb_nom") ||| sum("total_traffic_gb_den")  as  total_traffic_gb ,
sum("dl_qpsk_nom")  as  dl_qpsk ,
sum("dl_16qam_nom")  as  dl_16qam ,
sum("dl_64qam_nom")  as  dl_64qam
from
dnb.daily_stats.dc_e_nr_nrcelldu_day as dt

LEFT JOIN dnb.daily_stats.cell_mapping as cm on cm."Cellname" = dt."nrcelldu"
    INNER JOIN (SELECT site_id, on_board_date::date, time::date
            FROM dnb.daily_stats.df_dpm,
                generate_series(on_board_date::date, now(), '1 day') as time) as obs
                            on obs.time = dt."date_id" and cm."SITEID" = obs.site_id
    WHERE "Region" is not null
    GROUP BY date_id, rollup("Region");


